WHITESPACE = _{ " " }
// COMMENT = _{ ("--" ~ (!"\n" ~ ANY)* ~ "\n") | (endl? ~ "<--" ~ (!"---" ~ ANY)* ~ "-->" ~ endl?) }

endl = ${ "\r"? ~ "\n" }
whitespace = _{ " "+ }
line_end = _{ whitespace? ~ endl }

zone = ${ SOI ~ line_end* ~ scene* ~ whitespace? ~ EOI }
scene = ${ dialog }

dialog = ${ 
    label ~ line_end
    ~ dialog_multiple_lines
}

dialog_multiple_lines = ${ 
    PUSH(whitespace) ~ line 
    ~ line_on_offset*
    ~ POP ~ line
}

line_on_offset = ${ PEEK ~ line }

dialog_single_line = ${ whitespace ~ line }

// branch = ${ 
//     label ~ whitespace? ~ "??" ~ line_end+
//     ~ PUSH(whitespace) ~ line 
//     ~ (PEEK ~ line)*
// }

symbol = ${ ASCII_ALPHANUMERIC ~ (ASCII_ALPHANUMERIC | "-")* } 

label = ${ symbol ~ ":" }

line = ${ (dialog | command | text_line) ~ line_end }

command = ${ "*" ~ whitespace* ~ (item_command) }

item_command = ${"item" ~ (whitespace? ~ ("+" | "-") ~ whitespace? ~ symbol)+ }

text_line = ${ line_filter? ~ (text_fragment | link)+ }

text_fragment = { (ASCII_ALPHANUMERIC | "," | "<" | "/" | ">" | "(" | ")" | " " | ".")+ }

line_filter = { "(" ~ filter_expr ~ ")" }

link = !{ "[" ~ symbol ~ "|" ~ whitespace* ~ text_fragment ~ whitespace* ~ "]" }

filter_expr = !{ expr_equal } 

expr_equal = { expr_comp ~ (equal_operator ~ expr_comp)*}
equal_operator = {"=" | "!="}
expr_comp = { expr_sum ~ (comp_operator ~ expr_sum)*}
comp_operator = {">=" | ">" | "<" | "<="}
expr_sum = { expr_prod ~ (sum_operator ~ expr_prod )* }
sum_operator = {"+" | "-"}
expr_prod = { expr_atom ~ (prod_operator ~ expr_atom )* }
prod_operator = {"*" | "/"}
expr_atom = _{ ("(" ~ filter_expr ~ ")") | count_visits | int_literal }

count_visits = { "$" ~ symbol }

int_literal = { '1'..'9' ~ '0'..'9'* }